{"version":3,"sources":["js/refs.js","js/servises/localStorage.js","js/servises/constants.js","js/servises/api.js","js/modal-card.js","js/render-markup.js","js/api-services.js","js/movieGenres.js","index.js"],"names":["btnFilm","document","querySelector","inputFilm","ulGallery","modalInfo","backdrop","closeModalBtn","save","key","value","localStorage","setItem","JSON","stringify","error","get","parse","getItem","remove","removeItem","saveArrayItemToStorage","item","storageData","deleteArrayItemFromStorage","id","filter","data","BASE_URL","BASE_URL_IMG","FILE_SIZE","WEB_LOCAL_WATCHED","WEB_LOCAL_QUEUE","API_KEY","getMovie","url","fetch","then","response","status","Promise","reject","Error","json","createObj","original_title","genres","vote_average","release_date","poster_path","title","poster","preparationGenres","average","releaseDate","Date","getFullYear","renderMarkupInfoModal","innerHTML","onClickWorkWithData","e","target","tagName","btn","objData","dataset","add","workWithLocalStor","onShowModalWithInfoMovie","preventDefault","currentTarget","isModalOpen","closest","movie","addEventListener","elem","catch","console","log","refs","findItemById","array","find","obj","storage","length","chechedText","boolean","textContent","onBackdropClick","event","onModalClose","window","onEscKeyDown","body","classList","removeEventListener","code","map","name","checkInfoLsW","checkInfoLsQ","createMarkupInfoModal","vote_count","popularity","overview","toFixed","join","createMarkup","backdrop_path","genre_ids","createMarkupLs","dataLs","API_KEY1","API_KEY2","searchFilm","nameFilm","ok","createFetch","renderFotos","handError","markup","results","onSearchFilm","getFilm","inputName","trim","renderFotosLs","massege","getMovieGenres","res","err","message","getMovieById","movies"],"mappings":"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","file":"src.10045bd7.js","sourceRoot":"../src","sourcesContent":["export default {\n  btnFilm: document.querySelector('.btn-hero1'),\n  inputFilm: document.querySelector('#hero1-inputr'),\n  ulGallery: document.querySelector('.js-gallery'),\n  modalInfo: document.querySelector('.js-modal-info'),\n  backdrop: document.querySelector('.backdrop'),\n  closeModalBtn: document.querySelector('[data-action=\"close\"]'),\n};\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = key => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst remove = key => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nconst saveArrayItemToStorage = (key, item) => {\n  let storageData = get(key) || [];\n  storageData = [...storageData, item];\n  save(key, storageData);\n};\n\nconst deleteArrayItemFromStorage = (key, id) => {\n  let storageData = get(key);\n  storageData = storageData.filter(data => data.id !== id);\n  save(key, storageData);\n};\n\nexport default { get, save, remove, saveArrayItemToStorage, deleteArrayItemFromStorage };\n","const BASE_URL = 'https://api.themoviedb.org/3/movie';\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/';\nconst FILE_SIZE = 'w500';\nconst WEB_LOCAL_WATCHED = 'watched-list-movie';\nconst WEB_LOCAL_QUEUE = 'queue-list-movie';\nconst API_KEY = '7a08eb81e1904340c78ad5cf16c16a84';\n\nexport { BASE_URL, BASE_URL_IMG, FILE_SIZE, WEB_LOCAL_WATCHED, WEB_LOCAL_QUEUE, API_KEY };\n","import { BASE_URL, API_KEY } from './constants.js';\n\nfunction getMovie(id) {\n  const url = `${BASE_URL}/${id}?api_key=${API_KEY}`;\n  return fetch(url).then(response =>\n    response.status === 404\n      ? Promise.reject(new Error('The resource you requested could not be found.'))\n      : response.json(),\n  );\n}\n\nexport { getMovie };\n","import refs from './refs.js';\nconsole.log('ðŸš€ ~ refs', refs);\nimport {\n  BASE_URL_IMG,\n  FILE_SIZE,\n  WEB_LOCAL_WATCHED,\n  WEB_LOCAL_QUEUE,\n} from './servises/constants.js';\nimport { getMovie } from './servises/api.js';\nimport { createMarkupInfoModal } from './render-markup.js';\nimport storage from './servises/localStorage.js';\n\nfunction createObj(data) {\n  const { original_title, genres, vote_average, release_date, poster_path, id } = data;\n\n  return {\n    id,\n    title: original_title,\n    poster: `${BASE_URL_IMG + FILE_SIZE + poster_path}`,\n    genres: `${preparationGenres(genres)}`,\n    average: vote_average,\n    releaseDate: new Date(release_date).getFullYear(),\n  };\n}\n\nfunction renderMarkupInfoModal(data) {\n  refs.modalInfo.innerHTML = createMarkupInfoModal(data);\n}\n\nfunction onClickWorkWithData(e, data) {\n  if (e.target.tagName !== 'BUTTON') return false;\n\n  const btn = e.target;\n\n  const objData = createObj(data);\n\n  if (btn.dataset.add === 'watched') {\n    workWithLocalStor(WEB_LOCAL_WATCHED, btn, objData, objData.id);\n  }\n\n  if (btn.dataset.add === 'queue') {\n    workWithLocalStor(WEB_LOCAL_QUEUE, btn, objData, objData.id);\n  }\n}\n\nfunction onShowModalWithInfoMovie(e) {\n  e.preventDefault();\n  if (e.target === e.currentTarget) return false;\n\n  isModalOpen();\n\n  const id = e.target.closest('li').dataset.id;\n\n  getMovie(id)\n    .then(movie => {\n      renderMarkupInfoModal(movie);\n      refs.modalInfo.addEventListener('click', elem => onClickWorkWithData(elem, movie));\n    })\n    .catch(console.log);\n}\n\nrefs.ulGallery.addEventListener('click', onShowModalWithInfoMovie);\n\nconst findItemById = (array, id) => array.find(item => item.id === id);\n\nfunction workWithLocalStor(key, btn, obj, id) {\n  let data = storage.get(key) || [];\n\n  if (data.length >= 1 && findItemById(data, id)) {\n    storage.deleteArrayItemFromStorage(key, id);\n    chechedText(btn, key, true);\n    return;\n  }\n\n  storage.saveArrayItemToStorage(key, obj);\n  chechedText(btn, key, false);\n}\n\nfunction chechedText(btn, key, boolean) {\n  if (key === WEB_LOCAL_WATCHED) {\n    btn.textContent = boolean ? 'add to Watched' : 'remove to Watched';\n  }\n  if (key === WEB_LOCAL_QUEUE) {\n    btn.textContent = boolean ? 'add to queue' : 'remove to queue';\n  }\n}\n\nrefs.closeModalBtn.addEventListener('click', onModalClose);\nrefs.backdrop.addEventListener('click', onBackdropClick);\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onModalClose();\n  }\n}\n\nfunction isModalOpen() {\n  window.addEventListener('keydown', onEscKeyDown);\n  document.body.classList.add('show-modal', 'no-scroll');\n}\n\nfunction onModalClose() {\n  window.removeEventListener('keydown', onEscKeyDown);\n  document.body.classList.remove('show-modal', 'no-scroll');\n}\n\nfunction onEscKeyDown(e) {\n  if (e.code === 'Escape') {\n    onModalClose();\n  }\n}\nconst preparationGenres = array => array.map(({ name }) => name);\nexport { findItemById, preparationGenres };\n","import storage from './servises/localStorage.js';\n\nimport {\n  WEB_LOCAL_WATCHED,\n  WEB_LOCAL_QUEUE,\n  BASE_URL_IMG,\n  FILE_SIZE,\n} from './servises/constants.js';\n\nimport { findItemById, preparationGenres } from './modal-card.js';\n\nconst checkInfoLsW = id => {\n  const data = storage.get(WEB_LOCAL_WATCHED) || [];\n  return findItemById(data, id) ? 'remove to watched' : 'add to watched';\n};\n\nconst checkInfoLsQ = id => {\n  const data = storage.get(WEB_LOCAL_QUEUE) || [];\n  return findItemById(data, id) ? 'remove to queue' : 'add to queue';\n};\n\nfunction createMarkupInfoModal({\n  id,\n  vote_average,\n  vote_count,\n  popularity,\n  original_title,\n  title,\n  genres,\n  overview,\n  poster_path,\n}) {\n  return `<div class=\"wrapper-poster\">\n        <img class=\"info__img\" src=\"${BASE_URL_IMG + FILE_SIZE + poster_path}\" alt=\"${title}\" />\n      </div>\n      <div class=\"wrapper-info\">\n        <h3 class=\"info__title\">${original_title}</h3>\n        <table class=\"table\">\n          <tbody class=\"table__body\">\n            <tr class=\"table__row\">\n              <td class=\"table__title\">Vote / Votes</td>\n              <td class=\"table__text\"><span>${vote_average}</span>/<span>${vote_count}</span></td>\n            </tr>\n            <tr class=\"table__row\">\n              <td class=\"table__title\">Popularity</td>\n              <td class=\"table__text\">${popularity.toFixed(1)}</td>\n            </tr>\n            <tr class=\"table__row\">\n              <td class=\"table__title\">Original Title</td>\n              <td class=\"table__text\">${original_title}</td>\n            </tr>\n            <tr class=\"table__row\">\n              <td class=\"table__title\">Genre</td>\n              <td class=\"table__text\">${preparationGenres(genres).join()}</td>\n            </tr>\n          </tbody>\n        </table>\n        <p class=\"info__title-text\">About</p>\n        <p class=\"info__text\">${overview}</p>\n        <button class=\"info__btn--watched\" type=\"button\" data-add=\"watched\">${checkInfoLsW(\n          id,\n        )}</button>\n        <button class=\"info__btn--queue\" type=\"button\" data-add=\"queue\"> ${checkInfoLsQ(\n          id,\n        )}</button>\n      </div>`;\n}\n\nconst createMarkup = data => {\n  console.log(data);\n  return data\n    .map(\n      ({ backdrop_path, original_title, genre_ids, release_date, id }) => `\n<li data-id=\"${id}\" class=\"gallery__item\">\n<img src=\"https://image.tmdb.org/t/p/w500${backdrop_path}\" alt=\"\">\n<div class=\"gallery__info\">\n<p class=\"gallery__info-name\">${original_title}</p>\n<p class=\"gallery__information\">${genre_ids}|${release_date}</p>\n</div>\n</li>\n</ul>`,\n    )\n    .join('');\n};\n\nconst createMarkupLs = dataLs => {\n  return dataLs\n    .map(\n      ({ backdrop_path, original_title, genre_ids, release_date, id, vote_count }) => `\n   <li data-id=\"${id}\" class=\"gallery__item\">\n<img src=\"https://image.tmdb.org/t/p/w500${backdrop_path}\" alt=\"\">\n<div class=\"gallery__info\">\n<p class=\"gallery__info-name\">${original_title}</p>\n<p class=\"gallery__information\">${genre_ids}|${release_date}<span class=\"gallery__rating\">${vote_count}</span></p>\n</div>\n</li> `,\n    )\n    .join('');\n};\n\nexport { createMarkup, createMarkupLs, createMarkupInfoModal };\n","import refs from './refs';\n\nimport { createMarkup, createMarkupLs } from './render-markup';\n\n// https://api.themoviedb.org/3/movie/550?api_key=1f37c9d1204318c8a24c8b0a5ae713a0\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY1 = '1f37c9d1204318c8a24c8b0a5ae713a0';\nconst API_KEY2 = 'f9b3a8f6c2c6ac6ea45f1e88181f9357';\n\nconst searchFilm = nameFilm => {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY1}&query=${nameFilm}&id&genres&backdrop_path&original_title&homepage&release_date&vote_average&vote_count&overview&popularity`,\n  ).then(response => {\n    if (!response.ok) {\n      return Promise.reject(new Error(error));\n    }\n    return response.json();\n  });\n};\n\nconst createFetch = () => {\n  return fetch(`${BASE_URL}/trending/movie/week?api_key=${API_KEY1}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(new Error(error));\n      }\n      return response.json();\n    })\n    .then(data => {\n      return console.log(renderFotos(data));\n    })\n    .catch(error => handError(error));\n};\n\nconst renderFotos = data => {\n  const markup = createMarkup(data.results);\n  console.log(markup);\n  refs.ulGallery.innerHTML = markup;\n};\n\ncreateFetch();\n\nconst onSearchFilm = () => {\n  // restart();\n  getFilm();\n};\n\nconst getFilm = () => {\n  const inputName = refs.inputFilm.value.trim();\n\n  searchFilm(inputName)\n    .then(renderFotos)\n    .catch(error => {\n      handError(error);\n    });\n};\n\nconst renderFotosLs = dataLs => {\n  const markup = createMarkupLs(dataLs.results);\n  console.log(markup);\n  refs.ulGallery.innerHTML = markup;\n};\n\nconst handError = error => {\n  console.log(error.massege);\n};\n\nrefs.btnFilm.addEventListener('click', onSearchFilm);\n","import { BASE_URL, API_KEY } from './servises/constants';\n\n\nconst getMovieGenres = () => {\n  return fetch(`${BASE_URL}//genre/movie/list?api_key=${API_KEY}&language=en-US`).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(new Error('Not found'));\n  });\n};\n\ngetMovieGenres()\n  .then(({ genres }) => {\n    localStorage.setItem('movies', JSON.stringify(genres));\n  })\n  .catch(err => console.log(err.message));\n\nconst getMovieById = id => {\n  try {\n    const movies = JSON.parse(localStorage.getItem('movies'));\n    const movie = movies.find(movie => movie.id === id);\n    return movie ? movie.name : '';\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n\nexport { getMovieById };\n","import './sass/main.scss';\n\nimport './js/api-services';\nimport './js/modal-card';\nimport './js/modal-team';\nimport './js/render-markup';\nimport './js/movieGenres';\n"]}